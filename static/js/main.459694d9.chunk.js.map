{"version":3,"sources":["examples/Example1.jsx","examples/Example2.jsx","examples/Example3.jsx","examples/Example4.jsx","examples/Example5.jsx","examples/Example6.jsx","App.jsx","reportWebVitals.ts","index.tsx"],"names":["renderedCanvas","props","undefined","react_default","a","createElement","Fragment","dist","container","width","height","viewBox","showPoints","renderMode","pathFragments","M","x","y","color","L","Example1","_ref","controls","setSelected","className","onClick","render","es","id","style","relative","Example2","Z","Example3","C","c1","c2","e","Example4","S","Example5","Q","c","T","Example6","useToggle","initialState","arguments","length","_useState","useState","_useState2","Object","slicedToArray","state","setState","useCallback","App","_useToggle","_useToggle2","toggleRenderMode","_useToggle3","_useToggle4","toggleShowPoints","_useToggle5","_useToggle6","togglePathFragments","_useState3","_useState4","selected","rendermode","type","checked","onChange","exampleProps","target","open","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode","src_App"],"mappings":"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","file":"static/js/main.459694d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport Gist from 'react-gist';\r\nimport { SVGPath, Command } from '@dead-simple/svg-path-jsx';\r\nconst renderedCanvas = props => {\r\n  if (props === undefined) return <></>;\r\n  return (\r\n    <SVGPath\r\n      container={{\r\n        width: 250,\r\n        height: 250,\r\n        viewBox: '0 0 100 100',\r\n      }}\r\n      showPoints={!props.renderMode && props.showPoints ? props.showPoints : undefined}\r\n      pathFragments={!props.renderMode && props.pathFragments ? props.pathFragments : undefined}\r\n    >\r\n      <Command.M x={25} y={75} color={'cornflowerblue'} />\r\n      <Command.L x={50} y={25} color={'forestgreen'} />\r\n    </SVGPath>\r\n  );\r\n};\r\n\r\nexport default function Example1({ renderMode, showPoints, pathFragments, controls, setSelected }) {\r\n  return (\r\n    <div\r\n      className='demo-card'\r\n      onClick={() => {\r\n        setSelected({\r\n          render: props => (\r\n            <>\r\n              {renderedCanvas(props)}\r\n              <div>\r\n                {props.controls.render(props)}\r\n                <Gist\r\n                  id={\r\n                    props.renderMode\r\n                      ? '57987eec279df9b8bfeaea66783a62c0'\r\n                      : 'b682ebfc2616a57a5b84889533c7bdf9'\r\n                  }\r\n                />\r\n              </div>\r\n            </>\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      {renderedCanvas({ renderMode, showPoints, pathFragments, controls })}\r\n      <code className='demo-card-summary'>\r\n        <div>{renderMode ? `<path d={\\`` : `<SVGPath>`}</div>\r\n        <div style={{ color: 'cornflowerblue' }}>{renderMode ? `M…` : `<Command.M … />`}</div>\r\n        <div style={{ color: 'forestgreen' }}>{renderMode ? `L…` : `<Command.L … />`}</div>\r\n        <div>{renderMode ? `\\`} />` : `</SVGPath>`}</div>\r\n      </code>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Gist from 'react-gist';\r\nimport { SVGPath, Command } from '@dead-simple/svg-path-jsx';\r\nconst renderedCanvas = props => {\r\n  if (props === undefined) return <></>;\r\n  return (\r\n    <SVGPath\r\n      container={{\r\n        width: 250,\r\n        height: 250,\r\n        viewBox: '0 0 100 100',\r\n      }}\r\n      showPoints={!props.renderMode && props.showPoints ? props.showPoints : undefined}\r\n      pathFragments={!props.renderMode && props.pathFragments ? props.pathFragments : undefined}\r\n    >\r\n      <Command.M x={25} y={75} color='cornflowerblue' />\r\n      <Command.L x={50} y={25} color='forestgreen' />\r\n      <Command.L relative x={25} y={50} color='crimson' />\r\n    </SVGPath>\r\n  );\r\n};\r\n\r\nexport default function Example2({ renderMode, showPoints, pathFragments, controls, setSelected }) {\r\n  return (\r\n    <div\r\n      className='demo-card'\r\n      onClick={() => {\r\n        setSelected({\r\n          render: props => (\r\n            <>\r\n              {renderedCanvas(props)}\r\n              <div>\r\n                {props.controls.render(props)}\r\n                <Gist\r\n                  id={\r\n                    props.renderMode\r\n                      ? 'cbbc29812075c89b27427894cf5545fe'\r\n                      : '282f1e39b04f2eaa77fd1e387cf87c49'\r\n                  }\r\n                />\r\n              </div>\r\n            </>\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      {renderedCanvas({ renderMode, showPoints, pathFragments, controls })}\r\n      <code className='demo-card-summary'>\r\n        <div>{renderMode ? `<path d={\\`` : `<SVGPath>`}</div>\r\n        <div style={{ color: 'cornflowerblue' }}>{renderMode ? `M…` : `<Command.M … />`}</div>\r\n        <div style={{ color: 'forestgreen' }}>{renderMode ? `L…` : `<Command.L … />`}</div>\r\n        <div style={{ color: 'crimson' }}>{renderMode ? `l…` : `<Command.L relative … />`}</div>\r\n        <div>{renderMode ? `\\`} />` : `</SVGPath>`}</div>\r\n      </code>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Gist from 'react-gist';\r\nimport { SVGPath, Command } from '@dead-simple/svg-path-jsx';\r\nconst renderedCanvas = props => {\r\n  if (props === undefined) return <></>;\r\n  return (\r\n    <SVGPath\r\n      container={{\r\n        width: 250,\r\n        height: 250,\r\n        viewBox: '0 0 100 100',\r\n      }}\r\n      showPoints={!props.renderMode && props.showPoints ? props.showPoints : undefined}\r\n      pathFragments={!props.renderMode && props.pathFragments ? props.pathFragments : undefined}\r\n    >\r\n      <Command.M x={25} y={75} color='cornflowerblue' />\r\n      <Command.L x={50} y={25} color='forestgreen' />\r\n      <Command.L relative x={25} y={50} color='crimson' />\r\n      <Command.Z color='orange' />\r\n    </SVGPath>\r\n  );\r\n};\r\n\r\nexport default function Example3({ renderMode, showPoints, pathFragments, controls, setSelected }) {\r\n  return (\r\n    <div\r\n      className='demo-card'\r\n      onClick={() => {\r\n        setSelected({\r\n          render: props => (\r\n            <>\r\n              {renderedCanvas(props)}\r\n              <div>\r\n                {props.controls.render(props)}\r\n                <Gist\r\n                  id={\r\n                    props.renderMode\r\n                      ? 'c722cae56cf534fa9acf78898c2e703e'\r\n                      : 'd1687bcebbf5cb5790f667ed3bc57e10'\r\n                  }\r\n                />\r\n              </div>\r\n            </>\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      {renderedCanvas({ renderMode, showPoints, pathFragments, controls })}\r\n      <code className='demo-card-summary'>\r\n        <div>{renderMode ? `<path d={\\`` : `<SVGPath>`}</div>\r\n        <div style={{ color: 'cornflowerblue' }}>{renderMode ? `M…` : `<Command.M … />`}</div>\r\n        <div style={{ color: 'forestgreen' }}>{renderMode ? `L…` : `<Command.L … />`}</div>\r\n        <div style={{ color: 'crimson' }}>{renderMode ? `l…` : `<Command.L relative … />`}</div>\r\n        <div style={{ color: 'orange' }}>{renderMode ? `Z…` : `<Command.Z … />`}</div>\r\n        <div>{renderMode ? `\\`} />` : `</SVGPath>`}</div>\r\n      </code>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Gist from 'react-gist';\r\nimport { SVGPath, Command } from '@dead-simple/svg-path-jsx';\r\nconst renderedCanvas = props => {\r\n  if (props === undefined) return <></>;\r\n  return (\r\n    <SVGPath\r\n      container={{\r\n        width: 250,\r\n        height: 250,\r\n        viewBox: '0 0 100 100',\r\n      }}\r\n      showPoints={!props.renderMode && props.showPoints ? props.showPoints : undefined}\r\n      pathFragments={!props.renderMode && props.pathFragments ? props.pathFragments : undefined}\r\n    >\r\n      <Command.M x={25} y={37.5} color='cornflowerblue' />\r\n      <Command.C c1={[25, 75]} c2={[75, 75]} e={[75, 37.5]} color='forestgreen' />\r\n    </SVGPath>\r\n  );\r\n};\r\n\r\nexport default function Example4({ renderMode, showPoints, pathFragments, controls, setSelected }) {\r\n  return (\r\n    <div\r\n      className='demo-card'\r\n      onClick={() => {\r\n        setSelected({\r\n          render: props => (\r\n            <>\r\n              {props && renderedCanvas(props)}\r\n              <div>\r\n                {props.controls.render(props)}\r\n                <Gist\r\n                  id={\r\n                    props.renderMode\r\n                      ? '6ff009d4ce1d32397b5afcf4dd6fe265'\r\n                      : '38446cbfbd3a97ecc3907eef8e96eda3'\r\n                  }\r\n                />\r\n              </div>\r\n            </>\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      {renderedCanvas({ renderMode, showPoints, pathFragments, controls })}\r\n      <code className='demo-card-summary'>\r\n        <div>{renderMode ? `<path d={\\`` : `<SVGPath>`}</div>\r\n        <div style={{ color: 'cornflowerblue' }}>{renderMode ? `M…` : `<Command.M … />`}</div>\r\n        <div style={{ color: 'forestgreen' }}>{renderMode ? `C…` : `<Command.C … />`}</div>\r\n        <div>{renderMode ? `\\`} />` : `</SVGPath>`}</div>\r\n      </code>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Gist from 'react-gist';\r\nimport { SVGPath, Command } from '@dead-simple/svg-path-jsx';\r\nconst renderedCanvas = props => {\r\n  if (props === undefined) return <></>;\r\n  return (\r\n    <SVGPath\r\n      container={{\r\n        width: 250,\r\n        height: 250,\r\n        viewBox: '0 0 100 100',\r\n      }}\r\n      showPoints={!props.renderMode && props.showPoints ? props.showPoints : undefined}\r\n      pathFragments={!props.renderMode && props.pathFragments ? props.pathFragments : undefined}\r\n    >\r\n      <Command.M x={25} y={25} color='cornflowerblue' />\r\n      <Command.C c1={[25, 75]} c2={[50, 75]} e={[50, 50]} color='forestgreen' />\r\n      <Command.S c2={[75, 25]} e={[75, 75]} color='crimson' />\r\n    </SVGPath>\r\n  );\r\n};\r\n\r\nexport default function Example5({ renderMode, showPoints, pathFragments, controls, setSelected }) {\r\n  return (\r\n    <div\r\n      className='demo-card'\r\n      onClick={() => {\r\n        setSelected({\r\n          render: props => (\r\n            <>\r\n              {renderedCanvas(props)}\r\n              <div>\r\n                {props.controls.render(props)}\r\n                <Gist\r\n                  id={\r\n                    props.renderMode\r\n                      ? '6bfabaccb43c8d3b530b7aa8b5ae5c18'\r\n                      : '85b5f51c844dd8a995e4fc14d5719bd6'\r\n                  }\r\n                />\r\n              </div>\r\n            </>\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      {renderedCanvas({ renderMode, showPoints, pathFragments, controls })}\r\n      <code className='demo-card-summary'>\r\n        <div>{renderMode ? `<path d={\\`` : `<SVGPath>`}</div>\r\n        <div style={{ color: 'cornflowerblue' }}>{renderMode ? `M…` : `<Command.M … />`}</div>\r\n        <div style={{ color: 'forestgreen' }}>{renderMode ? `C…` : `<Command.C … />`}</div>\r\n        <div style={{ color: 'crimson' }}>{renderMode ? `S…` : ` <Command.S … />`}</div>\r\n        <div>{renderMode ? `\\`} />` : `</SVGPath>`}</div>\r\n      </code>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Gist from 'react-gist';\r\nimport { SVGPath, Command } from '@dead-simple/svg-path-jsx';\r\nconst renderedCanvas = props => {\r\n  if (props === undefined) return <></>;\r\n  return (\r\n    <SVGPath\r\n      container={{\r\n        width: 250,\r\n        height: 250,\r\n        viewBox: '0 0 100 100',\r\n      }}\r\n      showPoints={!props.renderMode && props.showPoints ? props.showPoints : undefined}\r\n      pathFragments={!props.renderMode && props.pathFragments ? props.pathFragments : undefined}\r\n    >\r\n      <Command.M x={25} y={25} color='cornflowerblue' />\r\n      <Command.Q c={[25, 75]} e={[50, 50]} color='forestgreen' />\r\n      <Command.T e={[75, 75]} color='crimson' />\r\n    </SVGPath>\r\n  );\r\n};\r\n\r\nexport default function Example6({ renderMode, showPoints, pathFragments, controls, setSelected }) {\r\n  return (\r\n    <div\r\n      className='demo-card'\r\n      onClick={() => {\r\n        setSelected({\r\n          render: props => (\r\n            <>\r\n              {renderedCanvas(props)}\r\n              <div>\r\n                {props.controls.render(props)}\r\n                <Gist\r\n                  id={\r\n                    props.renderMode\r\n                      ? '898608d6a9805b5622740e62cccea85b'\r\n                      : 'bacd4d118af929c87a3dd9bd3eddbd16'\r\n                  }\r\n                />\r\n              </div>\r\n            </>\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      {renderedCanvas({ renderMode, showPoints, pathFragments, controls })}\r\n      <code className='demo-card-summary'>\r\n        <div>{renderMode ? `<path d={\\`` : `<SVGPath>`}</div>\r\n        <div style={{ color: 'cornflowerblue' }}>{renderMode ? `M…` : `<Command.M … />`}</div>\r\n        <div style={{ color: 'forestgreen' }}>{renderMode ? `Q…` : `<Command.Q … />`}</div>\r\n        <div style={{ color: 'crimson' }}>{renderMode ? `T…` : ` <Command.T … />`}</div>\r\n        <div>{renderMode ? `\\`} />` : `</SVGPath>`}</div>\r\n      </code>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from 'react';\n\nimport './App.css';\n\nimport Example1 from './examples/Example1.jsx';\nimport Example2 from './examples/Example2.jsx';\nimport Example3 from './examples/Example3.jsx';\nimport Example4 from './examples/Example4.jsx';\nimport Example5 from './examples/Example5.jsx';\nimport Example6 from './examples/Example6.jsx';\n\nconst useToggle = (initialState = false) => {\n  // Initialize the state\n  const [state, setState] = useState(initialState);\n\n  // Define and memorize toggler function in case we pass down the component,\n  // This function change the boolean value to it's opposite value\n  const toggle = useCallback(() => setState(state => !state), []);\n\n  return [state, toggle];\n};\n\nfunction App() {\n  const [renderMode, toggleRenderMode] = useToggle(true),\n    [showPoints, toggleShowPoints] = useToggle(true),\n    [pathFragments, togglePathFragments] = useToggle(true),\n    [selected, setSelected] = useState(undefined);\n\n  const controls = {\n    render: props => (\n      <div className='demo-cards-controls' rendermode={props.renderMode ? 'rendermode' : undefined}>\n        <label>\n          <input\n            type='checkbox'\n            checked={props.renderMode}\n            onChange={toggleRenderMode}\n            className='demo-control-button render-mode-button'\n          />\n          Render as HTML path\n        </label>\n        <label>\n          <input\n            type='checkbox'\n            checked={props.showPoints}\n            onChange={toggleShowPoints}\n            className='demo-control-button show-points-button'\n          />\n          showPoints\n        </label>\n        <label>\n          <input\n            type='checkbox'\n            checked={props.pathFragments}\n            onChange={togglePathFragments}\n            className='demo-control-button show-fragments-button'\n          />\n          pathFragments\n        </label>\n      </div>\n    ),\n  };\n\n  const exampleProps = {\n    renderMode,\n    showPoints,\n    pathFragments,\n    controls,\n    setSelected,\n  };\n\n  return (\n    <div\n      className='App'\n      onClick={e => {\n        if (e.target.className === 'App') setSelected(undefined);\n      }}\n    >\n      <dialog className='demo-dialog' open={selected !== undefined ? 'open' : undefined}>\n        {selected && selected.render(exampleProps)}\n      </dialog>\n      <div className='main-content'>\n        <header>\n          <h1>svg-path-jsx</h1>\n          <h3>by 💀 Dead Simple JSX</h3>\n        </header>\n        {controls.render(exampleProps)}\n        <div className='demo-cards-container full-width'>\n          <Example1 {...exampleProps} />\n          <Example2 {...exampleProps} />\n          <Example3 {...exampleProps} />\n          <Example4 {...exampleProps} />\n          <Example5 {...exampleProps} />\n          <Example6 {...exampleProps} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}